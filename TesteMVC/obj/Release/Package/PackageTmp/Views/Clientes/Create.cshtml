@model GTISolutionTeste.Models.ClienteEnderecoDTO

@{
    ViewBag.Title = "Novo Usuário";
}


<script src="~/Scripts/scripts.js"></script>

@using (Html.BeginForm())
{
    <h3>Cliente</h3>
    @Html.AntiForgeryToken()
    <div class="valid-feedback">
        @Html.ValidationMessageFor(model => model.cpf, "", new { @class = "text-danger" })
    </div>
    <div class="valid-feedback">
        @Html.ValidationMessageFor(model => model.nome, "", new { @class = "text-danger" })
    </div>
    <div class="valid-feedback">
        @Html.ValidationMessageFor(model => model.rg, "", new { @class = "text-danger" })
    </div>
    <div class="valid-feedback">
        @Html.ValidationMessageFor(model => model.orgaoExpedicao, "", new { @class = "text-danger" })
    </div>
    <div class="valid-feedback">
        @Html.ValidationMessageFor(model => model.UF, "", new { @class = "text-danger" })
    </div>
    <div class="valid-feedback">
        @Html.ValidationMessageFor(model => model.dt_nascimento, "", new { @class = "text-danger" })
    </div>
    <div class="valid-feedback">
        @Html.ValidationMessageFor(model => model.sexo, "", new { @class = "text-danger" })
    </div>
    <div class="valid-feedback">
        @Html.ValidationMessageFor(model => model.estadoCivil, "", new { @class = "text-danger" })
    </div>
    <div class="valid-feedback">
        @Html.ValidationMessageFor(model => model.cep, "", new { @class = "text-danger" })
    </div>
    <div class="valid-feedback">
        @Html.ValidationMessageFor(model => model.logradouro, "", new { @class = "text-danger" })
    </div>
    <div class="valid-feedback">
        @Html.ValidationMessageFor(model => model.numero, "", new { @class = "text-danger" })
    </div>
    <div class="valid-feedback">
        @Html.ValidationMessageFor(model => model.bairro, "", new { @class = "text-danger" })
    </div>
    <div class="valid-feedback">
        @Html.ValidationMessageFor(model => model.cidade, "", new { @class = "text-danger" })
    </div>
    <div class="valid-feedback">
        @Html.ValidationMessageFor(model => model.UFEndereco, "", new { @class = "text-danger" })
    </div>
    <div class="row">
        <div class="col-md-2">
            <div class="form-group">
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                @Html.LabelFor(model => model.cpf, htmlAttributes: new { @class = "validationServer01" })
                @Html.EditorFor(model => model.cpf, new { htmlAttributes = new { @class = "form-control", @required = "required", onkeypress = "mask()" } })

            </div>
        </div>

        <div class="col-md-10">
            <div class="form-group">
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                @Html.LabelFor(model => model.nome, htmlAttributes: new { @class = "validationServer01" })
                @Html.EditorFor(model => model.nome, new { htmlAttributes = new { @class = "form-control", @required = "required" } })

            </div>
        </div>

        <div class="col-md-3">
            <div class="form-group">
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                @Html.LabelFor(model => model.rg, htmlAttributes: new { @class = "validationServer01" })
                @Html.EditorFor(model => model.rg, new { htmlAttributes = new { @class = "form-control is-valid" } })

            </div>
        </div>

        <div class="col-md-3">
            <div class="form-group">
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                @Html.LabelFor(model => model.dt_expedicao, htmlAttributes: new { @class = "validationServer01" })
                @Html.EditorFor(model => model.dt_expedicao, "{0:dd/MM/yyyy}", new { htmlAttributes = new { @class = "form-control is-valid" } })

            </div>
        </div>

        <div class="col-md-4">
            <div class="form-group">
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                @Html.LabelFor(model => model.orgaoExpedicao, htmlAttributes: new { @class = "validationServer01" })
                @Html.DropDownListFor(model => model.orgaoExpedicao,
                   new List<SelectListItem> {
                        new SelectListItem { Value = "" , Text = "" },
                        new SelectListItem { Value = "SSP/SP" , Text = "Secretaria de Segurança Pública" },
                        new SelectListItem { Value = "Cartório Civil" , Text = "Cartório Civil" },
                        new SelectListItem { Value = "Polícia Federal" , Text = "Polícia Federal" },
                     },
                   new { @class = "form-control is-valid" })

            </div>
        </div>

        <div class="col-md-2">
            <div class="form-group">
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                @Html.LabelFor(model => model.UF, htmlAttributes: new { @class = "validationServer01" })
                @Html.DropDownList("EstadosCliente", null, "", htmlAttributes: new { @class = "form-control", id = "UF", name = "UF", style = "width: 100%;background: #F8F8FF " })
            </div>
        </div>

        <div class="col-md-3">
            <div class="form-group">
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                @Html.LabelFor(model => model.dt_nascimento, htmlAttributes: new { @class = "validationServer01" })
                @Html.EditorFor(model => model.dt_nascimento, new { htmlAttributes = new { @class = "form-control is-valid", @required = "required" } })

            </div>
        </div>

        <div class="col-md-3">
            <div class="form-group">
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                @Html.LabelFor(model => model.sexo, htmlAttributes: new { @class = "validationServer01" })
                @Html.DropDownListFor(model => model.sexo,
                   new List<SelectListItem> {
                        new SelectListItem { Value = "" , Text = "" },
                        new SelectListItem { Value = "F" , Text = "Feminino" },
                        new SelectListItem { Value = "M" , Text = "Masculino" },
                     },
                   new { @class = "form-control", @required = "required" })

            </div>
        </div>

        <div class="col-md-3">
            <div class="form-group">
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                @Html.LabelFor(model => model.estadoCivil, htmlAttributes: new { @class = "validationServer01" })
                @Html.DropDownListFor(model => model.estadoCivil,
                   new List<SelectListItem> {
                        new SelectListItem { Value = "" , Text = "" },
                        new SelectListItem { Value = "Solteiro(a)" , Text = "Solteiro(a)" },
                        new SelectListItem { Value = "Casado(a)" , Text = "Casado(a)" },
                        new SelectListItem { Value = "Separado(a" , Text = "Separado(a)" },
                        new SelectListItem { Value = "Divorciado (a)" , Text = "Divorciado (a)" },
                        new SelectListItem { Value = "Viúvo (a)" , Text = "Viúvo (a)" },
                     },
                   new { @class = "form-control is-valid", @required = "required" })

            </div>
        </div>
    </div>
    <h3>Endereço</h3>
    <div class="row">
        <div class="col-md-2">
            <div class="form-group">
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                @Html.LabelFor(model => model.cep, htmlAttributes: new { @class = "validationServer01",  id = "UFEndereco",  })
                @Html.EditorFor(model => model.cep, new { htmlAttributes = new { @class = "form-control", @required = "required", id = "cep", } })

            </div>
        </div>

        <div class="col-md-2">
            <div class="form-group">
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                @Html.LabelFor(model => model.logradouro, htmlAttributes: new { @class = "validationServer01" })
                @Html.EditorFor(model => model.logradouro, new { htmlAttributes = new { @class = "form-control", @required = "required", id = "rua", } })

            </div>
        </div>

        <div class="col-md-1">
            <div class="form-group">
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                @Html.LabelFor(model => model.numero, htmlAttributes: new { @class = "validationServer01" })
                @Html.EditorFor(model => model.numero, new { htmlAttributes = new { @class = "form-control is-valid", @required = "required", id = "numero", } })

            </div>
        </div>

        <div class="col-md-2">
            <div class="form-group">
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                @Html.LabelFor(model => model.complemento, htmlAttributes: new { @class = "validationServer01" })
                @Html.EditorFor(model => model.complemento, new { htmlAttributes = new { @class = "form-control is-valid" } })

            </div>
        </div>

        <div class="col-md-2">
            <div class="form-group">
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                @Html.LabelFor(model => model.bairro, htmlAttributes: new { @class = "validationServer01" })
                @Html.EditorFor(model => model.bairro, new { htmlAttributes = new { @class = "form-control is-valid", @required = "required", id = "bairro", } })

            </div>
        </div>

        <div class="col-md-2">
            <div class="form-group">
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                @Html.LabelFor(model => model.cidade, htmlAttributes: new { @class = "validationServer01" })
                @Html.EditorFor(model => model.cidade, new { htmlAttributes = new { @class = "form-control is-valid", @required = "required", id = "cidade", } })

            </div>
        </div>

        <div class="col-md-1">
            <div class="form-group">
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                @Html.LabelFor(model => model.UFEndereco, htmlAttributes: new { @class = "validationServer01" })
                @Html.DropDownList("EstadosEndereco", null, "", htmlAttributes: new { @class = "form-control", id = "uf", name = "UFEndereco", style = "width: 100%;background: #F8F8FF ", @required = "required" })

            </div>
        </div>

    </div>

    <hr />

    <div class="col-md-12">
        <div class="form-group">
            <button class="btn btn-success btn-lg" style="float:right" type="submit">Cadastrar</button>
        </div>
    </div>

}

<div>
    @Html.ActionLink("Voltar para Lista", "Index")
</div>
@section Scripts {
    <script>
        $(document).ready(function () {
            $("#cpf").inputmask("mask", { "mask": "999.999.999-99" }, { reverse: true });
            $("#cep").inputmask("mask", { "mask": "99999-999" });
            $("#dt_nascimento").inputmask("mask", { "mask": "99/99/9999" });
            $("#dt_expedicao").inputmask("mask", { "mask": "99/99/9999" });
            $("#preco").inputmask("mask", { "mask": "999.999,99" }, { reverse: true });
            $("#valor").inputmask("mask", { "mask": "#.##9,99" }, { reverse: true });
            $("#ip").inputmask("mask", { "mask": "999.999.999.999" });
        });


        $(document).ready(function () {

            function limpa_formulário_cep() {
                // Limpa valores do formulário de cep.
                $("#rua").val("");
                $("#bairro").val("");
                $("#cidade").val("");
                $("#uf").val("");
                $("#ibge").val("");
            }

            //Quando o campo cep perde o foco.
            $("#cep").blur(function () {

                //Nova variável "cep" somente com dígitos.
                var cep = $(this).val().replace(/\D/g, '');

                //Verifica se campo cep possui valor informado.
                if (cep != "") {

                    //Expressão regular para validar o CEP.
                    var validacep = /^[0-9]{8}$/;

                    //Valida o formato do CEP.
                    if (validacep.test(cep)) {

                        //Preenche os campos com "..." enquanto consulta webservice.
                        $("#rua").val("...");
                        $("#bairro").val("...");
                        $("#cidade").val("...");
                        $("#uf").val("...");
                        $("#ibge").val("...");

                        //Consulta o webservice viacep.com.br/
                        $.getJSON("https://viacep.com.br/ws/" + cep + "/json/?callback=?", function (dados) {

                            if (!("erro" in dados)) {
                                //Atualiza os campos com os valores da consulta.
                                $("#rua").val(dados.logradouro);
                                $("#bairro").val(dados.bairro);
                                $("#cidade").val(dados.localidade);
                                $("#uf").val(dados.uf);
                                $("#ibge").val(dados.ibge);
                            } //end if.
                            else {
                                //CEP pesquisado não foi encontrado.
                                limpa_formulário_cep();
                                alert("CEP não encontrado.");
                            }
                        });
                    } //end if.
                    else {
                        //cep é inválido.
                        limpa_formulário_cep();
                        alert("Formato de CEP inválido.");
                    }
                } //end if.
                else {
                    //cep sem valor, limpa formulário.
                    limpa_formulário_cep();
                }
            });
        });

    </script>
}